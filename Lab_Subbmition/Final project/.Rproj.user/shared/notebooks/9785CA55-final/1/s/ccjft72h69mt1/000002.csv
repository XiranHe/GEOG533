"0","score.sentiment = function(tweets, pos.words, neg.words)"
"0","{"
"0","scores = laply(tweets, function(tweet, pos.words, neg.words) {"
"0","tweet = gsub('https://','',tweet) # removes https://"
"0","tweet = gsub('http://','',tweet) # removes http://"
"0","tweet=gsub('[^[:graph:]]', ' ',tweet) ## removes graphic characters  #like emoticons "
"0","tweet = gsub('[[:punct:]]', '', tweet) # removes punctuation "
"0","tweet = gsub('[[:cntrl:]]', '', tweet) # removes control characters"
"0","tweet = gsub('\\d+', '', tweet) # removes numbers"
"0","tweet=str_replace_all(tweet,""[^[:graph:]]"", "" "") "
"0","tweet = tolower(tweet) # makes all letters lowercase"
"0","word.list = str_split(tweet, '\\s+') # splits the tweets by word in a list"
"0","words = unlist(word.list) # turns the list into vector"
"0","pos.matches = match(words, pos.words) ## returns matching values for words from list "
"0","neg.matches = match(words, neg.words)"
"0","pos.matches = !is.na(pos.matches) ## converts matching values to true of false"
"0","neg.matches = !is.na(neg.matches)"
"0"," "
"0","score = sum(pos.matches) - sum(neg.matches) # true and false are treated as 1 and 0 so they can be added"
"0"," "
"0","return(score)"
"0"," "
"0","}, pos.words, neg.words )"
"0"," "
"0","scores.df = data.frame(score=scores, text=tweets)"
"0"," "
"0","return(scores.df)"
"0"," "
"0","}"
