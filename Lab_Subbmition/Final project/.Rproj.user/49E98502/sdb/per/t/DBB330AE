{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Sentiment Analysis\"\nauthor: \"Xiran He\"\noutput: \n  html_notebook:\n    toc: TRUE\n    toc_float: TRUE\n---\n\n## Creating World Cloud\nIn this part I want to create a world cloud about Trump. According to this way I what words people will use to evaluate Trump.\n\n### Authentication with OAuth\n\n```{r}\nif (!require(twitteR)) {install.packages(\"twitteR\")}\nif (!require(ROAuth)) {install.packages(\"ROAuth\")}\nlibrary(twitteR)\nlibrary(ROAuth)\n\n# you must get the following information from the Twitter App you just created\nmy.consumer.key = \"jGMlhMS8kBFdXd8eYZElRbzJH\"\nmy.consumer.secret = \"HMTxTdQ1IruiQT4PkeK0upLxKpsBBcql2gDIkUUOXfoIG0KYFl\"\nmy.access.token = \"917361228456095745-uJSuEQNSwGhrYhhycgX9i3UHRo73DnH\"\nmy.access.token.secret = \"RQFqWp5xI0gv1uzi41MfH5F2UWjLw3hhdVljrQOO4hxmP\"\n\nmy_oauth <- setup_twitter_oauth(consumer_key = my.consumer.key, consumer_secret = my.consumer.secret, access_token = my.access.token, access_secret = my.access.token.secret)\n```\n\n###  Extract Tweets\t\n\n```{r, message=FALSE, warning=FALSE}\ntweets <- searchTwitter(\"#Trump\", n=1000, lang=\"en\")\ntweets.text <- sapply(tweets, function(x) x$getText())\n```\n\n\n### Clean Up Text\tand remove stop words\nHow many counties in New York State?\n```{r, message=FALSE, warning=FALSE}\n# Replace blank space (ârtâ)\ntweets.text <- gsub(\"rt\", \"\", tweets.text)\n\n# Replace @UserName\ntweets.text <- gsub(\"@\\\\w+\", \"\", tweets.text)\n\n# Remove punctuation\ntweets.text <- gsub(\"[[:punct:]]\", \"\", tweets.text)\n\n# Remove links\ntweets.text <- gsub(\"http\\\\w+\", \"\", tweets.text)\n\n# Remove tabs\ntweets.text <- gsub(\"[ |\\t]{2,}\", \"\", tweets.text)\n\n# Remove blank spaces at the beginning\ntweets.text <- gsub(\"^ \", \"\", tweets.text)\n\n# Remove blank spaces at the end\ntweets.text <- gsub(\" $\", \"\", tweets.text)\n \n# #convert all text to lower case\ntweets.text <- tolower(tweets.text)\n\nif(!require(tm)) {install.packages(\"tm\")}\nlibrary(tm)\n\n#create corpus\ntweets.text.corpus <- Corpus(VectorSource(tweets.text))\n\n#clean up by removing stop words\ntweets.text.corpus <- tm_map(tweets.text.corpus, function(x) removeWords(x,stopwords()))\n```\n\n### Generate Word Cloud\n\n```{r, message=FALSE, warning=FALSE}\nif(!require(wordcloud)) {install.packages(\"wordcloud\")}\nlibrary(wordcloud)\n\n#generate wordcloud\nwordcloud(tweets.text.corpus,min.freq = 2, scale=c(7,0.5),colors=brewer.pal(8, \"Dark2\"),  random.color= TRUE, random.order = FALSE, max.words = 150)\n```\n\n### Question 1(e)\t\nCompute descriptive statistics of the population column (P0010001), including total, minimum, maximum, mean, median, and skewness. \n```{r}\n\n```\n\n### Question 1(f)\t\nCreate a histogram and a boxplot of the population.\n```{r}\n\n```\n\n\n## Question 2\nUse R package UScensus2010tract to complete the following tasks:    (20 pt.)\n```{r}\n\n```\n\n### Question 2(a)\t\nPlot a map of New York census tracts using the plot function.\n```{r}\n\n```\n\n### Question 2(b)\nCompute the total population based on census tracts.\n```{r}\n\n```\n\n### Question 2(c)\nSelect all census tracts in Broome County and plot the map. \n```{r}\n\n```\n\n### Question 2(d)\nWhat’s the total population of Broome County?\n```{r}\n\n```\n\n### Question 2(e)\nCreate a histogram and a boxplot of population based on census tracts of Broome County.\n```{r}\n\n```\n\n### Question 2(f)\nSelect the first five columns of the shapefile of Broome County census tract; add a new population ratio column (= census tract population / county population); save the new shapefile to the hard drive. \n```{r}\n\n```\n\n\n## Question 3\n\nUse R packages raster and ncdf4 to complete the following tasks:     (20 pt.)\n```{r}\n\n```\n\n### Question 3(a)\t\t\nLoad the multi-band raster dataset “NDVI.nc” into R.\n```{r}\n\n```\n\n### Question 3(b)\t\t\nGet the basic information about the dataset, including the number of rows, columns, cells, and bands; spatial resolution, extent, bounding box, and projection.\n```{r}\n\n```\n\n### Question 3(c)\t\nAggregate all bands to generate a mean NDVI raster and a maximum NDVI raster; save the two new raster datasets to the hard drive. \n```{r}\n\n```\n\n### Question 3(d)\t\t\t\nPlot the maps of monthly NDVI of the year 2001\n```{r}\n\n```\n\n### Question 3(e)\t\nCreate histograms of monthly NDVI of the year 2001.\n```{r}\n\n```\n\n### Question 3(f)\t\t\t\nPlot the NDVI map of July 2000; click any location with data on the map and retrieve the NDVI time series for all years; plot the NDVI time series of the selected location. \n```{r}\n\n```\n\n",
    "created" : 1512621295149.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1195503417",
    "id" : "DBB330AE",
    "lastKnownWriteTime" : 1512621243,
    "last_content_update" : 1512621243,
    "path" : "C:/Users/Lei/AppData/Local/Packages/Microsoft.MicrosoftEdge_8wekyb3d8bbwe/TempState/Downloads/lab10-SpatialData_template.Rmd",
    "project_path" : null,
    "properties" : {
        "chunk_output_type" : "inline"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}